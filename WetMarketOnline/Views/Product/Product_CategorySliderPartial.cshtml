@using EWM.Models;
@model List<MstProduct>

@{
    string directory = EWM.HelperClass.GeneralBLL.FileDirectory;
    string category = (ViewData["CatDesc"] == null) ? "" : ViewData["CatDesc"].ToString();
    string categorySlider = category + "_slider";
}

@* == JAVASCRIPT / JQUERY == *@
<script type="text/javascript">
    $(document).ready(() => {

        var multipleCardCarousel = document.querySelector(
            "#@categorySlider"
        );
        if (window.matchMedia("(min-width: 768px)").matches) {
            var carousel = new bootstrap.Carousel(multipleCardCarousel, {
                interval: false,
            });
            var carouselWidth = $("#carousel-inner-id")[0].scrollWidth;
            var cardWidth = $(".carousel-item").width();
            var scrollPosition = 0;
            $("#@categorySlider .carousel-control-next").on("click", function () {
                if (scrollPosition < carouselWidth - cardWidth * 4) {
                    scrollPosition += cardWidth;
                    $("#@categorySlider .carousel-inner").animate(
                        { scrollLeft: scrollPosition },
                        600
                    );
                }
            });
            $("#@categorySlider .carousel-control-prev").on("click", function () {
                if (scrollPosition > 0) {
                    scrollPosition -= cardWidth;
                    $("#@categorySlider .carousel-inner").animate(
                        { scrollLeft: scrollPosition },
                        600
                    );
                }
            });
        } else {
            $(multipleCardCarousel).addClass("slide");
        }
    })
</script>
@{
    <!-- Carousel -->
    <div id="@categorySlider" class="carousel" data-bs-ride="carousel">
        <a id="@category"><b>@category</b></a>

        <!-- The slideshow/carousel -->
        <div id="carousel-inner-id" class="carousel-inner">
            @{
                for (int i = 0; i < Model.Count; i++)
                {
                    string active = (i == 0) ? "active" : "";

                    // Product Item
                    MstProduct item = Model[i];

                    if (item == null) { continue; }

                    MstProductImage img = (item.GetImageList().Count == 0) ? null : item.GetImageList().OrderBy(l => l.ImageOrder).ToList()[0];
                    string imgLink = (img != null) ? String.Concat(directory, img.FileLocation) : "";
                    string desc = (img != null) ? img.ImageDesc : "Image not found";
                    decimal price = Decimal.Round(item.Price.Value, 2);

                    <div class="product-display carousel-item @active">
                        <!-- Card Reference: https://bootstrapious.com/p/bootstrap-cards-->
                        <div class="card rounded shadow-sm border-0">
                            <div class="card-body p-4">
                                <img src="@imgLink" alt="@desc" class="img-fluid d-block mx-auto mb-3">
                                <h5> <a href="#" class="text-dark">@item.ProductName</a></h5>
                                <p class="small text-muted font-italic">@item.ProductDesc.</p>
                                <p class="small text-muted font-italic">RM @price</p>
                                <ul class="list-inline small">

                                    @{
                                        for (int k = 0; k < (int)item.Rating; k++)
                                        {
                                            <li class="list-inline-item m-0"><i class="bi bi-star-fill text-success"></i></li>
                                        }

                                        if (item.Rating.ToString().Contains(".5"))
                                        {
                                            <li class="list-inline-item m-0"><i class="bi bi-star-half text-success"></i></li>
                                        }

                                        decimal starsLeft = (5 - item.Rating.Value);
                                        for (int k = 0; k < (int)starsLeft; k++)
                                        {
                                            <li class="list-inline-item m-0"><i class="bi bi-star text-success"></i></li>
                                        }
                                    }

                                </ul>
                            </div>
                        </div>
                    </div>

                }

            }

        </div>
        @{
            if (Model.Count > 1)
            {
                <!-- Left and right controls/icons -->
                <button class="carousel-control-prev" type="button" data-bs-target="#slider" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon"></span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#slider" data-bs-slide="next">
                    <span class="carousel-control-next-icon"></span>
                </button>}
        }
    </div>

}

